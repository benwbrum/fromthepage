.litebox-embed(style="width:550px")
  h1 =t('.update_user_profile')
  -if @user.owner
    p =t('.name_only_required')
      =form_for :collection, url: collection_update_path(@collection), html: { multipart: true, class: 'image-form' } do |f|
        =hidden_field_tag(:collection_id, @collection.id)
        label(data-empty=t('.no_image') data-hover=t('.upload_image') aria-label=t('.upload_image') title=t('.upload_image'))
          =f.file_field :picture, accept: 'image/*'
          -if @collection.picture_url(:thumb)
            =image_tag(@collection.picture_url(:thumb), alt: @collection.title)
      p.fglight =t('.picture_to_be_used_message')

  =form_for(@user, { :url => { :action => 'update' }}) do |f|
    =hidden_field_tag :user_id, @user.id
    =validation_summary @user.errors
    table.form
      tr.big
        th =f.label :real_name, t('.name')
        td.w100 =f.text_field :real_name
      tr
        th =f.label :orcid, t('.ocrid_id')
        td =f.text_field :orcid, :placeholder => t('.your_ocrid_id')
      -if @user.owner
        tr
          th =f.label :picture, t('.picture')
          td 
            =f.file_field :picture, accept: 'image/*'
            -if @user.picture_url(:thumb)
              .userpic =image_tag(@user.picture_url(:thumb), alt: @user.display_name)
        tr
          th= t('.user_url')
          td www.#{Rails.application.routes.default_url_options[:host]}/#{@user.slug}
        tr
          th= t('.sign_up_url')
          td www.#{Rails.application.routes.default_url_options[:host]}/#{@user.slug}/sign_up
        tr
          th =f.label :slug, t('.url')
          td =f.text_field :slug, value: @user.slug
        tr
          th =f.label :website, t('.website')
          td =f.text_field :website, :placeholder => t('.your_blog_or_homepage')
        tr
          th =f.label :location, t('.location')
          td =f.text_field :location, :placeholder => t('.where_are_you_from')
        tr
          td(colspan="2")
            =f.label :about, t('.about_you'), class: 'above'
            =f.text_area :about, rows: 4
      -else
        =f.hidden_field :website, value: "NOTOWNER"
        =f.hidden_field :about, value: "NOTOWNER"
      tr  
        th =f.label :preferred_locale, t('.interface_language'), class: 'collection-label'
        td =f.select :preferred_locale, options_for_select(I18n.available_locales.map{|code| [I18n.translate(code), code]}, @user.preferred_locale), :include_blank => true
      tr  
        td(colspan="2")
          =label_tag :dictation_language, t('.default_dictation_language'), class: 'collection-label'
      tr  
        td(colspan="2")
          =select_tag :dictation_language, {}, {onchange:'updateCountry()', class: 'w30'}
          |&nbsp;
          =select_tag :dialect, {}, {class: 'w40'}

    p.email_notifications =t('.select_notification')
    table.form.email_notifications
      tr
        td =f.check_box("notifications[user_activity]", {checked: @user.notification.user_activity})
        th =f.label :user_activity, t('.user_activity')
      -if @user.owner
        tr
          td =f.check_box("notifications[owner_stats]", {checked: @user.notification.owner_stats})
          th =f.label :owner_stats, t('.owner_stats')
      tr
        td =f.check_box("notifications[add_as_collaborator]", {checked: @user.notification.add_as_collaborator})
        th =f.label :add_as_collaborator, t('.add_as_collaborator')
      tr
        td =f.check_box("notifications[add_as_reviewer]", {checked: @user.notification.add_as_reviewer})
        th =f.label :add_as_reviewer, t('.add_as_reviewer')
      tr
        td =f.check_box("notifications[add_as_owner]", {checked: @user.notification.add_as_owner})
        th =f.label :add_as_owner, t('.add_as_owner')
      tr
        td =f.check_box("notifications[note_added]", {checked: @user.notification.note_added})
        th =f.label :page_edited, t('.page_edited')

    .toolbar
      .toolbar_group.aright =f.button t('.update_profile')

javascript:
  $(function(){
    var initialLang = "#{@lang_index}";
    var initialDialect = "#{@dialect_index}";
    
    console.log("Init Lang: ", initialLang, " Initial Dialect: ", initialDialect)
    
    for (var i = 0; i < langs.length; i++) {
      dictation_language.options[i] = new Option(langs[i][0], i);
    }
    
    findDefault(initialLang, initialDialect);
  });
