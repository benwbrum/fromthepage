-user_name = @user.display_name.presence || @user.login
-content_for :page_title, user_name
-content_for :meta_description, "#{user_name}'s profile at FromThePage. #{@user.about}"

section.user-profile
  .user-profile_image
    .userpic =gravatar_image_tag @user.email, :alt => user_name, :gravatar => { :size => 256 }
  .user-profile_details
    .headline
      h1.headline_title
        =user_name
      -if @user == current_user
        .headline_aside
          =link_to({ :action => 'update_profile', :user_id => @user.id }, class: 'button outline', :data => { litebox: { hash: 'update-profile' }})
            =svg_symbol '#icon-edit', class: 'icon'
            span Edit Profile
          |&nbsp;&nbsp;
          =link_to(edit_user_registration_path, class: 'button outline')
            =svg_symbol '#icon-user', class: 'icon'
            span Login &amp; Password
    .user-profile_stats
      span ="#{number_with_delimiter(@user.deeds.count)} #{'contribution'.pluralize(@user.deeds.count)}"
      span ="User since #{@user.created_at.strftime("%b %d, %Y")}"
      -if @user.last_sign_in_at.present?
        span ="Last seen #{@user.last_sign_in_at.strftime("%b %d, %Y")}"
    -if @user.location.present?
      p.big(data-prefix='Location:') =@user.location
    -if @user.owner
      -if @user.website.present?
        p.big(data-prefix='Website:') =link_to @user.website, @user.website, target: '_blank', rel: 'nofollow'
      -if @user.about.present?
        p.big(data-prefix='About:') =@user.about

-if @user.owner?
  .columns
    article.maincol
      h2 Collections
      =render '/dashboard/collection_index'
    aside.sidecol
      h2 Recent Activity
      =deeds_for({:owner => @user, :limit => 10})

-unless @user.owner?
  h2 Recent Activity by #{@user.display_name}
  -if @notes.present?
    h3 Recent Notes
    table.datagrid
      tr
        th Date
        th.w25 Page
        th.w75 Note
      -@notes.includes(:page).each do |note|
        -note_text = truncate(strip_tags(note.body), :length => 200)
        tr
          td.nowrap =note.created_at.localtime.strftime("%b %d, %Y, %l:%M %p")
          td.overflow =link_to note.page.title, collection_display_page_path(note.page.collection.owner, note.page.collection, note.page.work, note.page)
          td =link_to note_text, collection_display_page_path(note.page.collection.owner, note.page.collection, note.page.work, note.page, anchor: "note-#{note.id}")

    br

  -if @page_versions.present?
    h3 Recent Page Edits
    table.datagrid
      tr
        th Date
        th.w25 Work
        th.w60 Page
        th.w15 Version
      -@page_versions.each do |version|
        tr
          td.nowrap =version.created_on.localtime.strftime("%b %d, %Y, %l:%M %p")
          td.overflow
            -if version.page.work.present?
              =link_to version.page.work.title, collection_read_work_path(version.page.collection.owner, version.page.collection, version.page.work)
            -else
              span.a50 No work
          td =link_to version.page.title, collection_display_page_path(version.page.collection.owner, version.page.collection, version.page.work, version.page)
          td.nowrap =link_to "Revision #{version.page_version}", { :controller => 'page_version', :action => 'show', :page_version_id => version.id }
    br

  -if @article_versions.present?
    h3 Recent Article Edits
    table.datagrid
      tr
        th Date
        th.w25 Article
        th.w60 Categories
        th.w15 Version
      -@article_versions.each do |version|
          -unless version.article.collection.subjects_disabled
            -@collection = version.article.collection
            -description = truncate(strip_tags(xml_to_html(version.article.xml_text)), :length => 100)
            tr
              td.nowrap =version.created_on.localtime.strftime("%b %d, %Y, %l:%M %p")
              td.overflow =link_to version.article.title, { :controller => 'article', :action => 'show', :article_id => version.article.id }
              td ==version.article.categories.map { |c| link_to c.title, { :controller => 'article', :action => 'list', :collection_id => version.article.collection.id, anchor: "category-#{c.id}" } }.join(', ')
              td.nowrap =link_to "Revision #{version.version}", { :controller => 'article_version', :action => 'show', :article_version_id => version.id }
      