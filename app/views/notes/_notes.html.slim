-if @page.notes.empty?
  p.acenter.fglight(data-note-empty)
    ="Nobody has written a note for this page yet"
-unless user_signed_in?
  p.acenter.fglight =="Please #{link_to('sign in', new_user_session_path)} to write a note for this page"

-@page.notes.each do |note|
  =render({ partial: 'notes/note', locals: { note: note }})

-if user_signed_in?
  .user-bubble
    .userpic =gravatar_image_tag current_user.email, :alt => current_user.display_name

    =form_for :note, url: notes_path, remote: true, html: { class: 'user-bubble_form' } do |f|
      =hidden_field_tag(:page_id, @page.id)
      .user-bubble_form_editor
        =f.text_area :body, :rows => 4, :placeholder => 'Write a new note or ask a question...'
      .user-bubble_form_footer
        span.user-bubble_form_error
        =f.label :body, 'Note body', class: 'hidden'
        -if @collection.voice_recognition
          span.voice-info.voice
          =image_submit_tag 'mic-icon.png', height: '40', alt: 'Microphone', class: 'voice', id: 'start_img_note', onclick: 'startButton(event);'
        =f.button 'Save Note', id: 'save_note_button'

  -content_for :javascript
    javascript:
      $(function() {
        // Toggle note edit
        $(document).on('click', '[data-note-edit]', function() {
          var $container = $(this).closest('.user-bubble').toggleClass('edit');
          if($container.hasClass('edit')) {
            $('form', $container)[0].reset();
            $('.user-bubble_form_error', $container).empty();
          }
        });

        // Create and update note
        $(document).on('ajax:complete', 'form.user-bubble_form', function(e, xhr) {
          var $container = $(this).parent();
          var $error = $('.user-bubble_form_error', $container).empty();

          if (e.response === undefined && xhr.responseText.includes("Sign In")) {
            var message = "You need to be logged in to create this note."
            $error.text('Error: ' + message);
            return false;
          }

          if(xhr.status === 201) {
            // Note created
            var content = xhr.responseJSON.html;
            $(content).hide().insertBefore($container).fadeIn();
            $('[data-note-empty]').hide();
            this.reset();
          } else if(xhr.status === 200) {
            // Note updated
            var content = xhr.responseJSON.html;
            $container.removeClass('edit');
            $('.user-bubble_note', $container).html(content);
          } else if(xhr.status === 500) {
            var message = xhr.statusText;
            $error.text('Error: ' + message);
          } else {
            // Error occurred
            var message = xhr.responseJSON.join('. ');
            $error.text('Error: ' + message);
          }
        });

        // Delete note
        $(document).on('ajax:complete', '[data-note-delete]', function(e, xhr) {
          if(xhr.status === 200 || xhr.status === 204) {
            var $container = $(this).closest('.user-bubble');
            $container.fadeOut(function() { $(this).remove(); });
          }
        });


      });
