=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 1, :collection_id => @collection } })
.columns
  article.maincol
    -if @collection.intro_block
      h2 =t('.about')
      .collection-intro
        -unless @collection.picture.blank?
          .collection-intro_image
            =image_tag(@collection.picture_url(:thumb), alt: @collection.title)
        .collection-intro_about
          ==@collection.intro_block

    div.collection-work-list
      h2 =t('.works')

      .start_link
        -if @collection.has_untranscribed_pages? && @collection.active? && @collection.text_entry?
          p
          -if user_signed_in?
            =link_to t('.start_transcribing'), collection_transcribe_page_path(@collection.owner, @collection, @collection.next_untranscribed_page.work, @collection.next_untranscribed_page), class: 'button'
          -else
            =link_to t('.start_transcribing'), collection_guest_page_path(@collection.owner, @collection, @collection.next_untranscribed_page.work, @collection.next_untranscribed_page), class: 'button'

    -if all_complete
      h5.collection-work.acenter
        = t('.all_complete')

    .collection-works
      -@works.each do |work|
        -if @collection.text_entry?
          -default_path = collection_read_work_path(@collection.owner, @collection, work)
        -else
          -default_path = metadata_overview_collection_work_path(@collection.owner, @collection, work)
        .collection-work
          .collection-work_image
            -unless work.thumbnail.nil?
                =link_to image_tag(work.thumbnail, alt: work.title), default_path
          h4.collection-work_title =link_to work.title, default_path
          p.collection-work_snippet =truncate(strip_tags(work.description), length: 300, separator: ' ') || ''
          -if @collection.text_entry? && work.next_untranscribed_page
            p.collection-work_action 
              =t('.this_work_has_pages_that_need_work')
              span &nbsp;
              =link_to(t('.help_transcribe_or_correct'), collection_transcribe_page_path(@collection.owner, @collection, work, work.next_untranscribed_page))
          -if @collection.metadata_entry? && work.description_status != Work::DescriptionStatus::DESCRIBED && !work.has_untranscribed_pages?
            p.collection-work_action 
              =t('.this_work_has_not_been_described')
              span &nbsp;
              =link_to(t('.help_create_metadata'), describe_collection_work_path(@collection.owner, @collection, work))
          -if @collection.text_entry?
            .collection-work_stats
              -work_stats(work)
              span ="#{pluralize(work.work_statistic.total_pages, 'page')}: #{@wording}"
              span
                span.progress
                  -unless @collection.subjects_disabled
                    span(style="width:#{@progress_annotated}%")
                  span(style="width:#{@progress_completed - @progress_annotated + @progress_blank}%")
                  -unless @progress_review == 0
                    span(style="width:#{@progress_review}%")

      =render(:partial => 'shared/pagination', :locals => { :model => @works, :entries_info => true })

    -unless (@collection.works.incomplete_transcription.count == @collection.works.count)
      -link
      p.transcribed =link_to @link_title, collection_path(@collection.owner, @collection, works: @link_type)

    -if user_signed_in? && current_user.like_owner?(@collection) && @collection.active?
      -if @collection.is_a?(Collection)
        p.nodata_text = link_to t('.add_a_new_work'), new_work_collection_path(@collection.owner, @collection)

    -unless @collection.subjects_disabled
      -unless @collection.categories.empty?
        h3 =t('.subject_categories')
        p.big ==@collection.categories.where('parent_id is null').map { |c| link_to c.title, article_list_path(:collection_id => @collection, anchor: "category-#{c.id}") }.join(', ')

  aside.sidecol

    .user-label.owner
      =link_to(user_profile_path(@collection.owner), class: 'userpic')
        =profile_picture(@collection.owner)
      .username
        small =t('.project_by')
        =link_to @collection.owner.display_name, user_profile_path(@collection.owner)

    =form_tag(display_search_path, :method => :post, class: 'collection-search') do
      =hidden_field_tag('collection_id', @collection.slug)
      =search_field_tag 'search_string', nil, :placeholder => t('.search_the_text'), "aria-label" => 'search the text'
      =button_tag t('.search')
      =label_tag 'search_string', "Search the text", class: 'hidden'

    =form_tag({:controller => 'collection', :action => 'show'}, method: :get, enforce_utf8: false, class: 'collection-search') do
      =hidden_field_tag('collection_id', @collection, {:id => "collection id for search work"})
      =search_field_tag :work_search, params[:work_search], placeholder: t('.search_by_title'), "aria-label" => 'search by title'
      =button_tag t('.search')
      =label_tag 'search', "Search by Title", class: 'hidden'

    -if @collection.active?
      =link_to t('.pages_need_transcription'), collection_needs_transcription_path(@collection.owner, @collection), class: 'button review-button'

      =link_to t('.pages_need_review'), collection_needs_review_path(@collection.owner, @collection), class: 'button review-button'
 
    -if @collection.facets_enabled?
      =render(:partial => 'facet_form')

    h3 =t('.recent_notes')
    -@collection.notes.active.limit(10).each do |note|
      -if note.page
        -user = link_to note.user.display_name, user_profile_path(note.user)
        -note_title = strip_tags(note.title)
        -text = link_to truncate(note_title, :length => 100), collection_display_page_path(@collection.owner, @collection, note.page.work, note.page)
        .deed-short.small
          =time_tag(note.created_at, class: 'legend legend-left')
            =t('.time_ago_in_words', time: time_ago_in_words(note.created_at))
          span.deed-short_content
            =="#{user} wrote #{text}"
    small.legend
      =link_to t('.show_more'), deed_notes_path(@collection.slug), class: 'button outline round'

    h3 =t('.recent_edits')
    =deeds_for({ :collection => @collection, :limit => 20, :types => DeedType.collection_edits, :long_view => true })

=render({ :partial => '/shared/collection_footer' })
