=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 1, :collection_id => @collection } })
.columns
  article.maincol
    -if @collection.intro_block
      h2 About
      .collection-intro
        -unless @collection.picture.blank?
          .collection-intro_image
            =image_tag(@collection.picture_url(:thumb))
        .collection-intro_about
          ==@collection.intro_block

    div.collection-work-list
      h2 Works
      -pages = find_transcribe_pages

      .start_link
        -unless pages.blank?
          =link_to "Start Transcribing", collection_start_transcribing_path(@collection.owner, @collection), class: 'button'

    -if all_complete
      h5.collection-work.acenter
        |All works are fully transcribed.

    -@works.each do |work|
      .collection-work
        .collection-work_image
          -unless work.thumbnail.nil? 
            =image_tag(work.thumbnail, alt: work.title)
        h4.collection-work_title =link_to work.title, collection_read_work_path(@collection.owner, @collection, work)
        p.collection-work_snippet =truncate(strip_tags(work.description), length: 300, separator: ' ') || ''
        .collection-work_stats
          -work_stats(work)
          span ="#{pluralize(work.work_statistic.total_pages, 'page')}: #{@wording}"
          span
            span.progress
              -unless @collection.subjects_disabled
                span(style="width:#{@progress_annotated}%")
              span(style="width:#{@progress_completed - @progress_annotated}%")
              -unless @progress_review == 0
                span(style="width:#{@progress_review}%")

    =render(:partial => 'shared/pagination', :locals => { :model => @works, :entries_info => true })

    -link
    p.transcribed =link_to @link_title, collection_path(@collection.owner, @collection, works: @link_type)

    -if user_signed_in? && current_user.like_owner?(@collection)
      -if @collection.is_a?(Collection)
        p.nodata_text = link_to 'Add a new work', new_work_collection_path(@collection.owner, @collection)
    
    -unless @collection.subjects_disabled
      -unless @collection.categories.empty?
        h3 Subject Categories
        p.big ==@collection.categories.where('parent_id is null').map { |c| link_to c.title, { :controller => 'article', :action => 'list', :collection_id => @collection, anchor: "category-#{c.id}" } }.join(', ')

  aside.sidecol

    .user-label.owner
      =link_to(user_profile_path(@collection.owner), class: 'userpic')
        =gravatar_image_tag @collection.owner.email, :alt => @collection.owner.display_name
      .username
        small Owned by
        =link_to @collection.owner.display_name, user_profile_path(@collection.owner)

    =form_tag({:controller => 'display', :action => 'search'}, :method => :get, class: 'collection-search') do
      =hidden_field_tag('collection_id', @collection.id)
      =search_field_tag 'search_string', nil, :placeholder => 'Search in collection...'
      =button_tag 'Search'
      =label_tag 'search_string', "Search collection", class: 'hidden'

    =form_tag({:controller => 'collection', :action => 'show'}, method: :get, enforce_utf8: false, class: 'collection-search') do
      =hidden_field_tag('collection_id', @collection.id)
      =search_field_tag :search, params[:search], placeholder: 'Search for works...'
      =button_tag 'Search'
      =label_tag 'search', "Search for works", class: 'hidden'

    =link_to "Pages That Need Transcription", collection_needs_transcription_path(@collection.owner, @collection), class: 'button review-button'

    =link_to "Pages That Need Review", collection_needs_review_path(@collection.owner, @collection), class: 'button review-button'

    h3 Recent Notes
    -@collection.notes.active.limit(10).each do |note|
      -user = link_to note.user.display_name, user_profile_path(note.user)
      -text = link_to truncate(note.title, :length => 100), collection_display_page_path(@collection.owner, @collection, note.page.work, note.page)
      .deed-short.small
        =time_tag(note.created_at, class: 'legend legend-left')
          ="#{time_ago_in_words note.created_at} ago"
        span.deed-short_content
          =="#{user} wrote #{text}"
    small.legend
      =link_to 'Show More', { :controller => 'deed', :action => 'list', :collection_id => @collection.id }, class: 'button outline round'

    h3 Recent Edits
    =deeds_for({ :collection => @collection, :limit => 10, :types => [Deed::PAGE_TRANSCRIPTION, Deed::PAGE_EDIT, Deed::ARTICLE_EDIT, Deed::OCR_CORRECTED, Deed::NEEDS_REVIEW, Deed::TRANSLATION_REVIEW], :long_view => true })

=render({ :partial => '/shared/collection_footer' })

