=javascript_include_tag "settings"
=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 5, :collection_id => @collection }})
=render({ :partial => 'edit_tabs', :locals => { :selected => 2}})

.collection-settings-wrapper
  =form_for :collection, url: collection_update_path(@collection), remote: true, authenticity_token: true, html: {id: 'collection-settings-form'} do |f|
    =f.submit t('.save_changes'), id: 'collection-settings-save', hidden: true
    table.form.collection-settings
      tr
        td(colspan="2")
          =f.label :text_language
            h3(style="display:inline-block") =t('.text_language')
            =f.select :text_language, options_for_select(@text_languages, (@collection.text_language ? @collection.text_language : 'eng')), {}, {class: 'w50', disabled: !@collection.text_entry?}
            p =t('.text_language_description') 
      tr: td
      tr 
        td(colspan="2")
          h3 =t('.transcription_type')
          p =t('.transcription_type_description')
      tr 
        td(colspan="2")
          =f.radio_button :field_based, false, :checked => !@collection.field_based, disabled: !@collection.text_entry?
          =f.label :field_based_false
            h3.settings-label =t('.document_based_transcription')
            =link_to t('.edit_buttons'), collection_editor_button_edit_path(:collection_id => @collection.id), disabled: @collection.field_based || !@collection.text_entry?, class: 'button inline-btn', id: 'document-based-edit', 'aria-label' => t('.edit_buttons'), :data => { litebox: { hash: 'edit-buttons' }}          
            p =t('.document_based_transcription_description')          
      tr 
        td(colspan="2")
          =f.radio_button :field_based, true, :checked => @collection.field_based, disabled: !@collection.text_entry?
          =f.label :field_based_true
            h3.settings-label =t('.field_based_transcription')
            =link_to t('.edit_fields'), transcription_field_edit_fields_path(:collection_id => @collection), disabled: !@collection.field_based || !@collection.text_entry?, class: 'button inline-btn fields exits', id: 'field-based-edit', 'aria-label' => t('.edit_fields')
            p =t('.field_based_transcription_description')
      tr: td
      tr
        td(colspan="2")
          =f.check_box :data_entry_type, :checked => @collection.metadata_entry?
          =f.label :data_entry_type
            h3.settings-label =t('.enable_metadata_description')
            =link_to t('.edit_metadata_fields'), transcription_field_edit_metadata_fields_path(:collection_id => @collection), disabled: !@collection.metadata_entry?, class: 'button inline-btn fields exits', id: 'metadata-fields-edit', 'aria-label' => t('.edit_fields')    
            p =t('.metadata_description_description')
      tr 
        td(colspan="2")
          =f.check_box :subjects_enabled, disabled: !@collection.text_entry?
          =f.label :subjects_enabled
            h3 =t('.subjects_enabled')
            p =t('.subjects_enabled_description')
      tr: td
      tr 
        td(colspan="2") 
          h3 =t('.ocr_correction')
          -if @collection.works.ocr_disabled.any? || @collection.works.empty?
            =link_to(collection_enable_ocr_path(:collection_id => @collection.id), class: 'button action-btn', disabled: @collection.works.empty? || !@collection.text_entry?)
              span =t('.enable_ocr')
          -if @collection.works.ocr_enabled.any?
            =link_to(collection_disable_ocr_path(:collection_id => @collection.id), class: 'button action-btn', disabled: !@collection.text_entry?)
              span =t('.disable_ocr')
          p =t('.ocr_description')

-content_for :javascript
  javascript: 
    $(document).ready(function() {
      $('#collection_text_language').select2();

      $('input[type=radio][name="collection[field_based]"]').change(function() {
        if ($(this).val() == 'true') {
          $('#field-based-edit').removeAttr('disabled');
          $('#document-based-edit').attr('disabled', 'disabled');
        } else {
          $('#field-based-edit').attr('disabled', 'disabled');
          $('#document-based-edit').removeAttr('disabled');
        }
      });
      $('input[type=checkbox][name="collection[data_entry_type]"]').change(function() {
        if ($(this).is(':checked')) {
          $('#metadata-fields-edit').removeAttr('disabled');
        } else {
          $('#metadata-fields-edit').attr('disabled', 'disabled');
        }
      });
    });
