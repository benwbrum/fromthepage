  section.collection-stats
    .collection-stats_counters
      .counter(data-prefix="#{number_with_delimiter stats[:works]}") #{t('.work').pluralize(stats[:works])}
      .counter(data-prefix="#{number_with_delimiter stats[:pages]}") #{t('.page').pluralize(stats[:pages])}
      .counter(data-prefix="#{number_with_delimiter stats[DeedType::NOTE_ADDED]}") #{t('.note').pluralize(stats[DeedType::NOTE_ADDED])}
      -unless subjects_disabled
        .counter(data-prefix="#{number_with_delimiter stats[:subjects]}") #{t('.subject').pluralize(stats[:subjects])}
        .counter(data-prefix="#{number_with_delimiter stats[:mentions]}") #{t('.reference').pluralize(stats[:mentions])}
      .counter(data-prefix="#{number_with_delimiter stats[:contributors]}") #{t('.collaborator').pluralize(stats[:contributors])}
    .collection-stats_counters
      .counter(data-prefix="#{number_with_delimiter stats[:pages_transcribed]}") #{t('.page').pluralize(stats[:pages_transcribed])} #{t('.transcribed')}
      .counter(data-prefix="#{number_with_delimiter stats[:pages_incomplete]}") #{t('.page').pluralize(stats[:pages_incomplete])} #{t('.incomplete')}
      .counter(data-prefix="#{number_with_delimiter stats[:pages_needing_review]}") #{t('.page').pluralize(stats[:pages_needing_review])} #{t('.needing_review')}
      .counter(data-prefix="#{number_with_delimiter stats[DeedType::PAGE_EDIT]}") #{t('.page')} #{t('.edit').pluralize(stats[DeedType::PAGE_EDIT])}
      -unless subjects_disabled
        .counter(data-prefix="#{number_with_delimiter stats[DeedType::PAGE_INDEXED]}") #{t('.page').pluralize(stats[DeedType::PAGE_INDEXED])} #{t('.indexed')}
      -if @collection.works.where(supports_translation: true).exists?
        .counter(data-prefix="#{number_with_delimiter stats[DeedType::PAGE_TRANSLATED]}") #{t('.page').pluralize(stats[DeedType::PAGE_TRANSLATED])} #{t('.translated')}
      -if @collection.works.where(ocr_correction: true).exists?
        .counter(data-prefix="#{number_with_delimiter stats[DeedType::OCR_CORRECTED]}") #{t('.ocr_correction').pluralize(stats[DeedType::OCR_CORRECTED])}
      -if @collection.metadata_entry?      
        .counter(data-prefix="#{number_with_delimiter stats[:descriptions]}") #{t('.works_described').pluralize(stats[:descriptions])}
      -if stats[:line_count] > 0
        -if @collection.field_based
          .counter(data-prefix="#{number_with_delimiter stats[:line_count]}") #{t('.records_indexed').pluralize(stats[:line_count])}
        -else
          .counter(data-prefix="#{number_with_delimiter stats[:line_count]}") #{t('.lines_transcribed').pluralize(stats[:line_count])}


