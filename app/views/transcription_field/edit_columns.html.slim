=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 10, :collection_id => @collection }})

div.columns
  div.maincol
    h2 =t('.edit_spreadsheet_header')

    h3 =t('.screen_ruler')
    p= t('.screen_ruler_description')
    -if @transcription_field.row_highlight
      =link_to t('.disable_ruler'), transcription_field_spreadsheet_column_disable_ruler_path(@transcription_field), class: 'button'

      h4 =t('.page_layout')
      p= t('.identify_rows_description')
      =link_to t('.identify_rows'), transcription_field_spreadsheet_column_choose_offset_path(@transcription_field), class: 'button'

    -else
      =link_to t('.enable_ruler'), transcription_field_spreadsheet_column_enable_ruler_path(@transcription_field), class: 'button'
  
    =form_tag transcription_field_spreadsheet_column_add_columns_path
      =hidden_field_tag(:collection_id, @collection.id)
      =hidden_field_tag(:transcription_field_id, @transcription_field.id)
      table.form
        tbody
          tr
            th.big =label_tag :starting_rows, t('.start_rows_label')
            td.big =number_field_tag :starting_rows, @transcription_field.starting_rows, :min => 0, :max => 999, class: 'field percent'
            td.w100.fglight =t('.start_rows_description')

      h3 =t('.edit_spreadsheet_columns')
      p 
        i =t('.transcription_warning')
      table.field-form#new-columns
        =render ({partial: 'column_form'})
        tbody#soratble-columns
          -unless @current_columns.blank?
            -@current_columns.each do |column|
              =render ({ partial: 'new_column_form', locals: {collection_id: @collection, column: column}})
          -else
            -3.times do
              =render ({ partial: 'new_column_form', locals: {collection_id: @collection, column: nil, transcription_field: @transcription_field}})

      .flex-toolbar
        .flex-toolbar_group
          =button_tag t('.add_additional_column'), type: 'button', id: 'add-column', class: 'button'
        .flex-toolbar_group.push-right
          =button_tag t('.save'), name: 'save', type: 'submit', class: 'button'
          =link_to t('.cancel'), transcription_field_edit_fields_path(:collection_id => @collection.slug), class: 'button'
          =button_tag t('.done'), name: 'done', type: 'submit', class: 'button'

    h2 =t('.preview')
    =render({ :partial => '/shared/handsontable', :locals => {:transcription_field => @transcription_field} })

-content_for :javascript
  javascript:
    $(function() {
      $('#soratble-columns').sortable({
        axis: 'y',
        items: 'tr',
        forceHelperSize: true,
        forcePlaceholderSize: true,
        update: function(e, ui) {
          var data = $(this).sortable('serialize');
          if (data) {
            $.ajax({
              url: "#{transcription_field_spreadsheet_column_reorder_path(field_id: @transcription_field.id, collection_id: @collection.id)}",
              type: "PATCH",
              data: data,
            });
          }
        }
      });

      $('#soratble-columns').on('click', '[data-delete-column]', function() {
        $(this).closest('tr:not(:only-child)').remove();
      });

      $('#add-column').click(function(e) {
        $('#new-columns').append("#{j render partial: 'new_column_form', locals: {collection_id: @collection, column: nil, transcription_field: @transcription_field}}");
      });

      $(document).on('change', '.input_type', function() {
        addOptions(this, 2);
      })

      $('#new-columns tr').each(function() {
        var optionsObj = $(this).find('td .field-options')[0];
        if (optionsObj !== undefined) {
          var index = $(this).find('td .input_type')[0].options.selectedIndex;
          if (index == 2) {
            $(optionsObj).prop('disabled', false);
          };
        };
      })
    });
