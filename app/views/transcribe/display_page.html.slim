=javascript_include_tag "transcribe"
-if current_page?(collection_oneoff_review_page_path(@collection.owner, @collection, @page)) || @quality_sampling || @user
  =render({ :partial => '/shared/collection_tabs', :locals => { :selected => 12, :collection_id => @collection.id }})
  .review-breadcrumbs
    -if current_page? collection_oneoff_review_page_path(@collection.owner, @collection, @page)
      =render(partial: '/shared/review_breadcrumbs', locals: {selection: :one_off_review_page})
    -elsif @quality_sampling
      =render(partial: '/shared/review_breadcrumbs', locals: {selection: :quality_sampling_review_page})
    -elsif @user
      =render(partial: '/shared/review_breadcrumbs', locals: {selection: :user_review_page})
-else
  =render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')
- if @autolinked_changed
  = hidden_field_tag(:autolinked_source_text, @autolinked_source_text)
=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class, id: 'custom_form_id' }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  =hidden_field_tag(:flow, params[:flow])
  =hidden_field_tag(:quality_sampling_id, params[:quality_sampling_id])
  =validation_summary @page.errors

  .page-toolbar
    .flex-toolbar
      .flex-toolbar_group
        a.button.outline(data-fullscreen-toggle)
          =svg_symbol "#icon-expand", class: 'icon'
          span.hide-l =t('.fullscreen')
        -layout_modes = { 'ltr' => t('.image_at_the_left'), 'rtl' => t('.image_at_the_right'), 'ttb' => t('.image_at_the_top'), 'btt' => t('.image_at_the_bottom') }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =t('.layout')
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
        -if @page.status != Page::STATUS_BLANK && @collection.voice_recognition
          .voice-recognition
            =image_submit_tag 'mic-icon.png', height: '40', alt: t('.microphone'), class: 'voice', id: 'start_img', onclick: 'startButton(event);'
            span.voice-info

      .flex-toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span =t('.always_show_fullscreen')

      .flex-toolbar_group.push-right
        =f.label 'mark_blank', t('.mark_as_blank')
        =f.check_box('mark_blank', {checked: @page.status == Page::STATUS_BLANK})

      -if !@collection.review_workflow
        .flex-toolbar_group
          =f.label 'needs_review', t('.needs_review')
          =f.check_box('needs_review', {checked: @page.status == Page::STATUS_NEEDS_REVIEW})

      =render(:partial => 'save_buttons')

  -if @page.status == Page::STATUS_NEEDS_REVIEW && current_user.can_review?(@collection)
    .page-review
      -if @collection.review_workflow 
        =t('.this_page_marked_needs_review_workflow_version')
      -else
        =t('.this_page_marked_needs_review')

  .page-columns(data-layout-mode="#{@layout_mode}" id="splitter")
    .page-column
      .page-imagescan
        =render :partial => '/shared/osd_div'

    .page-column
      -if @page.status == Page::STATUS_BLANK
        .page-preview[*language_attrs(@collection)]
          .centered
            .centered_content
              p.nodata_text==t('.this_page_marked_blank')
        .page-editarea(style="display:none")
          =f.text_area :source_text

      -else
        -if @preview_xml
          .page-preview[*language_attrs(@collection)] ==xml_to_html(@preview_xml)

        .page-editarea(style=("display:none" if @preview_xml) *language_attrs(@collection))
          -if @work.scribes_can_edit_titles
            .page-editarea_title
              =f.label :title, t('.title'), class: 'a50'
              =f.text_field :title
          -if !@collection.field_based
            =f.text_area(:source_text, class: 'page-editarea_textarea', autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: @collection.enable_spellcheck, 'aria-label': t('.edit_transcription'))
            -text_direction = Rtl.rtl?(@collection.text_language) ? 'rtl' : 'ltr'  
            =render({ :partial => '/shared/codemirror', :locals => { :textarea => "page_source_text", :text_direction => text_direction} })
          -else
            =render ({partial: 'transcription_field/field_layout', locals: {collection_id: @collection, transcribe: true}})

.fgfaded
  ==@work.set_transcription_conventions
  =render :partial => 'shared/markup_help'
  p =link_to t('.more_help'), collection_work_help_path(@collection.owner, @collection, @page.work), target: '_blank'

h2.legend =t('.notes_and_questions')
.page-notes
  =render :partial => "notes/notes"


#custom-alert
  #custom-alert-box
    p Are you sure you want to blank out this page?
    button#cancelButton Cancel
    button#blankPageButton Blank out this page

-unless @current_user_alerted
  -unless current_user.slug.nil?
    -content_for :javascript
      javascript:
        setInterval("transcribe_periodic_timer()", 60000);
        function transcribe_periodic_timer() {
          $.ajax({
            url: "#{collection_transcribe_still_editing_path(current_user.slug, @collection.id, @work.id, @page.id)}",
            error: function(xhr) {
              if(xhr.status==401) {
                // user has been logged out
                var flash_message = "#{{escape_javascript(render(:partial => '/shared/flash', :locals => { type: 'alert', message: 'Your session may have expired while you were editing.  You may want to copy your work to prevent it getting lost.' }))}}";
                $('#flash_wrapper').html(flash_message);
                $('.flash').flashclose();
              } else {
                // some connection problem
                var flash_message = "#{{escape_javascript(render(:partial => '/shared/flash', :locals => { type: 'alert', message: 'Your connection to the website is unstable.  You may want to copy your work to prevent it getting lost.' }))}}";
                $('#flash_wrapper').html(flash_message);
                $('.flash').flashclose();
              }
            },
            complete: function() {
              $(".page-busy-overlay").hide();
            }
          });
        }

        transcribe_periodic_timer();

-content_for :javascript
  javascript:
    var splitter = null;

    function applySplitter(mode) {
      var position = '50%'

      if(splitter) {
        splitter.destroy();
      }

      splitter = $('#splitter').split({
        orientation: (mode === 'rtl' || mode === 'ltr')?'vertical':'horizontal',
        limit: 10,
        position, // if there is no percentage it interpret it as pixels
        onDrag: function(event) {
          if(typeof myCodeMirror !== 'undefined') {
            myCodeMirror.refresh();
          }
          if(typeof hot !== 'undefined') {
            hot.render();
          }
          Cookies.set('drag_position', splitter.position(), { expires: 365 });

          if(mode === 'rtl') {
            var left_width = $('.left_panel').width();
            var right_width = $('.right_panel').width();

            $('.right_panel').width(left_width);
            $('.left_panel').width(right_width);
          }

          if(mode === 'btt') {
            var top_height = $('.top_panel').height();
            var bottom_height = $('.bottom_panel').height();

            $('.top_panel').height(bottom_height);
            $('.bottom_panel').height(top_height);
          }
        }
      });

      if(typeof myCodeMirror !== 'undefined') {
        myCodeMirror.refresh();
      }
      if(typeof hot !== 'undefined') {
        hot.render();
      }

      if(Cookies && (Cookies.get('drag_position') !== undefined) && (Cookies.get('drag_position') !== '0')) {
        position = parseFloat(Cookies.get('drag_position'));
        splitter.position(position);

        if(mode === 'rtl') {
          var left_width = $('.left_panel').width();
          var right_width = $('.right_panel').width();

          $('.right_panel').width(left_width);
          $('.left_panel').width(right_width);
        }

        if(mode === 'btt') {
          var top_height = $('.top_panel').height();
          var bottom_height = $('.bottom_panel').height();

          $('.top_panel').height(bottom_height);
          $('.bottom_panel').height(top_height);
        }
      }

      $('.vsplitter').attr('title', 'Drag this to change the editor and image viewer');
      $('.hsplitter').attr('title', 'Drag this to change the editor and image viewer');
    }

    window.addEventListener('resize', function(event) {
      applySplitter($('[data-layout-mode]').attr('data-layout-mode'));
    })

    //set language for voice to text
    var lang = "#{current_user.dictation_language || @collection.language}";

    function transcribe_active_editing() {
      $.ajax({
        url: "#{active_editing_collection_work_path(@collection.owner.slug, @collection.id, @work.id, @page.id)}"
      });
    }

    var lastTypingAt = null;

    function minutesDiff(dateTimeValue2, dateTimeValue1) {
      var differenceValue =(dateTimeValue2.getTime() - dateTimeValue1.getTime()) / 1000;
      differenceValue /= 60;
      return Math.abs(Math.round(differenceValue));
    }

    function sendActiveEditing() {
      if(!lastTypingAt || (lastTypingAt && minutesDiff(lastTypingAt, new Date()) > 10)) {
        lastTypingAt = new Date();
        transcribe_active_editing();
      }
    }


    $('.field-wrapper .field-input').each(function() {
      $(this).change(function() {
        sendActiveEditing()
      })
      $(this).keyup(function() {
        sendActiveEditing()
      })
    });


    $(function() {
      var imageWindow = null;

      $('[data-fullscreen-toggle]').on('click', function() {
        $(this).toggleClass('pressed');
        $('.page-editor').toggleClass('fullscreen');

        if (typeof hot !== 'undefined') {
          hot.updateSettings({});
        }

        applySplitter($('[data-layout-mode]').attr('data-layout-mode'));
      });

      $('[data-layout-set]').on('click', function() {
        var mode = $(this).data('layout-set');
        Cookies.set('transcribe_layout_mode', mode, { expires: 365 });
        Cookies.set('drag_position', 0, { expires: 365 });

        if (typeof freezeTableColumn !== "undefined") {
          window.removeEventListener('scroll', freezeTableColumn);
          window.addEventListener('scroll', function (e) {
            if(mode === 'ttb') {
              freezeTableColumn('.page-imagescan', '.spreadsheet', '.ht_clone_top');
            } else {
              freezeTableColumn('.page-toolbar', '.spreadsheet', '.ht_clone_top');
            } 
          });
        }

        $('[data-layout-mode]').attr('data-layout-mode', mode);

        if (typeof viewer !== 'undefined') {
          requestAnimationFrame(() => viewer.raiseEvent('reset-bounds'));
        };

        if (typeof hot !== 'undefined') {
          hot.updateSettings({});
        };

        applySplitter(mode);
      });

      $('#auto-fullscreen').on('change', function() {
        var checked = this.checked ? 'yes' : 'no';
        Cookies.set('auto_fullscreen', checked, { expires: 365 });
      });

      $('#page_needs_review').click(function(){
        $('#page_mark_blank').prop('checked', false);
      });

      $('#page_mark_blank').click(function(){
        $('#page_needs_review').prop('checked', false);
      });

      if(Cookies && (Cookies.get('transcribe_layout_mode') !== undefined)) {
        applySplitter(Cookies.get('transcribe_layout_mode'));
      } else {
        applySplitter($('[data-layout-mode]').attr('data-layout-mode'));
      }
    });

    $(function() {

        let allowFormSubmission = false;

        function showCustomAlert(message) {
            // Show the custom alert
            $("#custom-alert-box p").text(message);
            $("#custom-alert").show();
        }

        function hideCustomAlert() {
            // Hide the custom alert
            $("#custom-alert").hide();
        }

        function allowFormToSubmit() {
            // Allow form submission
            allowFormSubmission = true;
            // Submit the form
            $("#custom_form_id").submit();
        }

        function restrictFormSubmission() {
            // Restrict form submission
            allowFormSubmission = false;
            // Show the custom alert
            showCustomAlert();
        }

      $('form').submit(function(event) {
        var isMarkedBlank = $('#page_mark_blank').is(':checked');
        var hasTranscribedvalue = $('.page-editarea_textarea').length < 0;
        var hasTranscribedText = $('.page-editarea_textarea').length > 0 && $('.page-editarea_textarea').val().trim().length > 0;
        var hasFieldContent = false;
        var hasFilledCells = false;

        // Check if spreadsheet have content
        if (typeof hot !== 'undefined') {
          var data = hot.getData();
          for (var i = 0; i < data.length; i++) {
            for (var j = 0; j < data[i].length; j++) {
              if (data[i][j] !== null && data[i][j] !== '') {
                hasFilledCells = true;
                break;
              }
            }
            if (hasFilledCells) {
              break;
            }
          }
        }

      // Check if fields have content
        $('.field-wrapper .field-input').each(function() {
          var content = $(this).val().trim();
          if (content !== '') {
            hasFieldContent = true;
            return false;
          }
        });

        if (isMarkedBlank && (hasTranscribedText || hasFieldContent || hasFilledCells)) {
          if (!allowFormSubmission) {
            event.preventDefault();
            // Show the custom alert

            var confirmation = showCustomAlert("#{j(t('.mark_blank_warning'))}");

            if (!confirmation) {
              return false;
            }
          }          
        } else {
          hideCustomAlert();
          allowFormToSubmit();
        }

      });
      $("#cancelButton").click(function() {
          hideCustomAlert();
      });

      // Handle blank page button click
      $("#blankPageButton").click(function() {
          allowFormToSubmit();
          hideCustomAlert();
      });

      // Handle finish_button_top click
      $("#finish_button_top").click(function() {
          restrictFormSubmission();
      });
    });

    // TODO change the parameter name for the HOT data to the name of the spreadsheet field
    // TODO change the way we access the HOT data to allow more than one spreadsheet
