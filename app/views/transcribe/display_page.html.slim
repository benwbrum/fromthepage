=javascript_include_tag "transcribe"

=render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')


=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  =validation_summary @page.errors

  .page-toolbar
    .toolbar
      .toolbar_group
        a.button.outline(data-fullscreen-toggle) =t('.fullscreen')
      .toolbar_group
        -layout_modes = { 'ltr' => t('.image_at_the_left'), 'rtl' => t('.image_at_the_right'), 'ttb' => t('.image_at_the_top'), 'btt' => t('.image_at_the_bottom') }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =layout_modes[@layout_mode]
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
      .toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span =t('.always_show_fullscreen')

      .toolbar_group.w100.aright
        =f.label 'mark_blank', t('.mark_as_blank')
        -if @page.status == Page::STATUS_BLANK
          =f.check_box('mark_blank', {checked: true})
        -else
          =f.check_box('mark_blank', {checked: false})

      .toolbar_group.w100.aright
        =f.label 'needs_review', t('.needs_review')
        -if @page.status == Page::STATUS_NEEDS_REVIEW
          =f.check_box('needs_review', {checked: true})
        -else
          =f.check_box('needs_review', {checked: false})

      .toolbar_group.w100.alright
        -unless @preview_xml
            =>button_tag t('.preview'), :name => 'preview'
        -else
            =>button_tag t('.edit'), :name => 'edit'
        -unless @collection.subjects_disabled || @collection.field_based
            =>button_tag t('.autolink'), :name => 'autolink'
        =button_tag t('.save_changes'), :name => 'save', id: 'save_button_top', onclick: 'unsavedNotes(event);'

  -if @page.status == Page::STATUS_NEEDS_REVIEW
    .page-review
      =t('.this_page_marked_needs_review')

  .page-columns(data-layout-mode="#{@layout_mode}" data-fullheight='{ "bottom": 30, "cssrule": "height" }')
    .page-column
      .page-imagescan
        =render :partial => '/shared/osd_div'

    div class=(!@collection.field_based ? 'page-column' : 'page-column fieldarea')
      -if @page.status == Page::STATUS_BLANK
        .centered
          .centered_content
            p.nodata_text==t('.this_page_marked_blank')
        .page-editarea(style=("display:none"))
          =f.text_area :source_text

      -else
        -if @collection.voice_recognition
          .page-column_voice
            =image_submit_tag 'mic-icon.png', height: '40', alt: t('.microphone'), class: 'voice', id: 'start_img', onclick: 'startButton(event);'
            span.voice-info

        //.page-column_actions
          -unless @preview_xml
            =>button_tag t('.preview'), :name => 'preview'
          -else
            =>button_tag t('.edit'), :name => 'edit'
          -unless @collection.subjects_disabled || @collection.field_based
            =>button_tag t('.autolink'), :name => 'autolink'
        -if @preview_xml
          .page-preview[*language_attrs(@collection)] ==xml_to_html(@preview_xml)

        .page-editarea(style=("display:none" if @preview_xml) *language_attrs(@collection))
          -if @work.scribes_can_edit_titles
            .page-editarea_title
              span =f.label :title, t('.title'), class: 'a50'
              span =f.text_field :title
          -if !@collection.field_based
            =f.text_area(:source_text, autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: false)
            =f.label :source_text, t('.edit_transcription'), class: 'hidden'
          -else
            =render ({partial: 'transcription_field/field_layout', locals: {collection_id: @collection, transcribe: true}})

      .page-toolbar-bottom
        .toolbar
          .toolbar_group.w100.aright
            -unless @preview_xml
                =>button_tag t('.preview'), :name => 'preview'
            -else
                =>button_tag t('.edit'), :name => 'edit'
            -unless @collection.subjects_disabled || @collection.field_based
                =>button_tag t('.autolink'), :name => 'autolink'
            =button_tag t('.save_changes'), :name => 'save', id: 'save_button_bottom', onclick: 'unsavedNotes(event);'

.fgfaded ==@work.set_transcription_conventions

.fgfaded.page-indent
  =render :partial => 'shared/markup_help'

.page-indent
  =link_to t('.more_help'), collection_work_help_path(@collection.owner, @collection, @page.work), target: '_blank'

h2.legend =t('notes_and_questions')
.page-notes
  =render :partial => "notes/notes"

=render({ :partial => '/shared/collection_footer' })

-has_title = @work.scribes_can_edit_titles
-text_direction = Rtl.rtl?(@collection.text_language) ? 'rtl' : 'ltr'

-if text_direction == 'ltr'
  =render({ :partial => '/shared/codemirror', :locals => { :textarea => "page_source_text", :has_title => has_title, :text_direction => text_direction} })


-unless @current_user_alerted
  -unless current_user.slug.nil?
    -content_for :javascript
      javascript:
        setInterval("transcribe_periodic_timer()", 60000);

        function transcribe_periodic_timer() {
          $.ajax({
            url: "#{collection_transcribe_still_editing_path(current_user.slug, @collection.id, @work.id, @page.id)}",

            complete: function() {
              $(".page-busy-overlay").hide();
            }
          });
        }

        transcribe_periodic_timer();
