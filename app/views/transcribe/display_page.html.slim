=render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')

=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  =validation_summary @page.errors
  .page-toolbar
    .toolbar

      .toolbar_group
        a.button.outline(data-fullscreen-toggle) Fullscreen
      .toolbar_group
        -layout_modes = { 'ltr' => 'Image at the left', 'rtl' => 'Image at the right', 'ttb' => 'Image at the top', 'btt' => 'Image at the bottom' }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =layout_modes[@layout_mode]
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
      .toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span Always show in fullscreen

      .toolbar_group.w100.aright
        =f.label 'mark_blank', 'Mark as blank'
        -if @page.status == 'blank'
          =f.check_box('mark_blank', {checked: true})
        -else
          =f.check_box('mark_blank', {checked: false})

      .toolbar_group.w100.aright
        =f.label 'needs_review', 'Needs Review'
        -if @page.status == 'review'
          =f.check_box('needs_review', {checked: true})
        -else
          =f.check_box('needs_review', {checked: false})

      .toolbar_group.w100.aright
        =button_tag 'Save Changes', :name => 'save', id: 'save_button', onclick: 'unsavedNotes(event);'


  .page-columns(data-layout-mode="#{@layout_mode}" data-fullheight='{ "bottom": 30, "cssrule": "height" }')
    .page-column
      .page-imagescan
        -if @page.ia_leaf
          =render :partial => '/ia/ia_bookreader_div'
        -elsif @page.sc_canvas
          =render :partial => '/shared/iiif_div'
        -elsif @page.omeka_file
          =render :partial => '/shared/zoom_div', :locals => { :fullsize_url => @page.omeka_file.fullsize_url }
        -else
          =render :partial => '/shared/zoom_div'
          
    div class=(!@collection.field_based ? 'page-column' : 'page-column fieldarea')
      -if @page.status == 'blank'
        .centered
          .centered_content
            p.nodata_text=="This page is marked blank"
        .page-editarea(style=("display:none"))
          =f.text_area :source_text

      -else
        -if @collection.voice_recognition
          .page-column_voice
            =image_submit_tag 'mic-icon.png', height: '40', alt: 'Microphone', class: 'voice', id: 'start_img', onclick: 'startButton(event);'
            span.voice-info

        .page-column_actions
          -unless @preview_xml
            =>button_tag 'Preview', :name => 'preview'
          -else
            =>button_tag 'Edit', :name => 'edit'
          -unless @collection.subjects_disabled
            =>button_tag 'Autolink', :name => 'autolink'
        -if @preview_xml
          .page-preview ==xml_to_html(@preview_xml)

        .page-editarea(style=("display:none" if @preview_xml) *language_attrs(@collection))
          -if @work.scribes_can_edit_titles
            .page-editarea_title
              span =f.label :title, 'Title:', class: 'a50'
              span =f.text_field :title
          -if !@collection.field_based
            =f.text_area(:source_text, autocomplete: "off", autocorrect: "off", autocapitalize: "off", spellcheck: false)
            =f.label :source_text, 'Edit transcription', class: 'hidden'
          -else
            =render ({partial: 'transcription_field/field_layout', locals: {collection_id: @collection, transcribe: true}})

.fgfaded ==@work.set_transcription_conventions

.fgfaded.page-indent
  =render :partial => 'shared/markup_help'

.page-indent
  =link_to 'More help....', collection_work_help_path(@collection.owner, @collection, @page.work), target: '_blank'

h2.legend Page Notes
.page-notes
  =render :partial => "notes/notes"

=render({ :partial => '/shared/collection_footer' })


-content_for :javascript
  javascript:
    //set language for voice to text
    var lang = "#{@collection.language}";

    $(function() {
      $('[data-fullscreen-toggle]').on('click', function() {
        $(this).toggleClass('pressed');
        $('.page-editor').toggleClass('fullscreen');
        $(window).trigger('resize.FullHeight');
        $('.zoomer-container').zoomer('resize');
      });
      $('[data-layout-set]').on('click', function() {
        var mode = $(this).data('layout-set');
        Cookies.set('transcribe_layout_mode', mode, { expires: 365 });
        $('[data-layout-mode]').attr('data-layout-mode', mode);
        $('.zoomer-container').zoomer('resize');
      });
      $('#auto-fullscreen').on('change', function() {
        var checked = this.checked ? 'yes' : 'no';
        Cookies.set('auto_fullscreen', checked, { expires: 365 });
      });

      $('#page_needs_review').click(function(){
        $('#page_mark_blank').prop('checked', false);
      });

      $('#page_mark_blank').click(function(){
        $('#page_needs_review').prop('checked', false);
      });

    });

-unless MIXPANEL_ID.blank?
  javascript:  mixpanel.track("Transcribe Page");
