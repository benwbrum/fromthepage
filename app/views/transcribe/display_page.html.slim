=render({ :partial => '/shared/page_tabs', :locals => { :selected => 3, :page_id => @page.id }})

-editor_class = 'page-editor' + (@auto_fullscreen == 'yes' ? ' fullscreen' : '')

=form_for(@page, :url => { :action => 'save_transcription' }, :html => { class: editor_class }) do |f|
  =hidden_field_tag(:page_id, @page.id)
  .page-toolbar
    .toolbar
      .toolbar_group
        =f.label :status, title: relevant_status_help(@work), class: 'hide-l'
        =f.select :status, relevant_transcription_statuses(@work), { :include_blank => '- Transcription status not set -' }, class: 'wauto'
      .toolbar_group
        a.button.outline(data-fullscreen-toggle) Fullscreen
      .toolbar_group
        -layout_modes = { 'ltr' => 'Image at the left', 'rtl' => 'Image at the right', 'ttb' => 'Image at the top', 'btt' => 'Image at the bottom' }
        dl.dropdown.page-columns-layout(data-dropdown='{ "selectable": true }')
          dt.button.outline
            =svg_symbol "#icon-layout-#{@layout_mode}", class: 'icon'
            span.hide-l =layout_modes[@layout_mode]
          dd
            -layout_modes.each do |mode, text|
              a(data-layout-set="#{mode}")
                =svg_symbol "#icon-layout-#{mode}", class: 'icon'
                span =text
      .toolbar_group.hide-m
        label.auto-fullscreen
          =check_box_tag 'auto-fullscreen', 'yes', @auto_fullscreen == 'yes'
          |&nbsp;
          span Always show in fullscreen
      .toolbar_group.w100.aright
        =button_tag 'Save Changes', :name => 'save'


  .page-columns(data-layout-mode="#{@layout_mode}" data-fullheight='{ "bottom": 30, "cssrule": "height" }')
    .page-column
      .page-imagescan
        -if @page.ia_leaf
          =render :partial => '/ia/ia_bookreader_div'
        -elsif @page.sc_canvas
          =render :partial => '/shared/iiif_div'
        -elsif @page.omeka_file
          =render :partial => '/shared/zoom_div', :locals => { :fullsize_url => @page.omeka_file.fullsize_url }
        -else
          =render :partial => '/shared/zoom_div'

    .page-column
      .page-column_actions
        -unless @preview_xml
          =>button_tag 'Preview', :name => 'preview'
        -else
          =>button_tag 'Edit', :name => 'edit'
        =>button_tag 'Autolink', :name => 'autolink'
      -if @preview_xml
        .page-preview ==xml_to_html(@preview_xml)

      .page-editarea(style=("display:none" if @preview_xml))
        -if @work.scribes_can_edit_titles
          .page-editarea_title
            span =f.label :title, 'Title:', class: 'a50'
            span =f.text_field :title
        =f.text_area :source_text

-if @work.transcription_conventions.present?
  .fgfaded ==@work.transcription_conventions

.fgfaded
  =render :partial => 'shared/markup_help'

h2.legend Page Notes
.page-notes
  =render :partial => "notes/notes"

-content_for :javascript
  javascript:
    $(function() {
      $('[data-fullscreen-toggle]').on('click', function() {
        $(this).toggleClass('pressed');
        $('.page-editor').toggleClass('fullscreen');
        $(window).trigger('resize.FullHeight');
        $('.zoomer-container').zoomer('resize');
      });
      $('[data-layout-set]').on('click', function() {
        var mode = $(this).data('layout-set');
        Cookies.set('transcribe_layout_mode', mode, { expires: 365 });
        $('[data-layout-mode]').attr('data-layout-mode', mode);
        $('.zoomer-container').zoomer('resize');
      });
      $('#auto-fullscreen').on('change', function() {
        var checked = this.checked ? 'yes' : 'no';
        Cookies.set('auto_fullscreen', checked, { expires: 365 });
      });
    });
