ruby:
  approve_button = nil
  done_button = nil
  save_button = nil

  if @collection.review_workflow && @page.status == Page::STATUS_NEEDS_REVIEW && current_user.can_review?(@collection)
    approve_button = button_tag t('.approve'), name: 'approve_to_transcribed', type: 'submit', id: 'approve_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.approve_to_transcribed_tooltip')}", class: "bggreen", data: { disable_with: t('.please_wait') }
  end

  if [nil, "", Page::STATUS_INCOMPLETE].include?(@page.status)
    if @collection.review_workflow
      done_button = button_tag t('.done'), name: 'done_to_needs_review', type: 'submit', id: 'finish_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.finish_to_needs_review_tooltip')}", class: "bggreen", data: { disable_with: t('.please_wait') }
    else
      done_button = button_tag t('.done'), name: 'done_to_transcribed', type: 'submit', id: 'finish_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.finish_to_transcribed_tooltip')}", class: "bggreen", data: { disable_with: t('.please_wait') }
    end
  end

  # check status of page and configuration of collection
  save_button_title = approve_button || done_button ? t('.save_changes') : t('.save')
  if @page.status.blank? || @page.status == Page::STATUS_INCOMPLETE || @page.status == Page::STATUS_BLANK
    save_button = button_tag save_button_title, name: 'save_to_incomplete', type: 'submit', id: 'save_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.save_to_incomplete_tooltip')}", data: { disable_with: t('.please_wait') }, onclick: 'unsavedNotes(event);'
  elsif @page.status == Page::STATUS_NEEDS_REVIEW
    save_button = button_tag save_button_title, name: 'save_to_needs_review', type: 'submit', id: 'save_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.save_to_needs_review_tooltip')}", data: { disable_with: t('.please_wait') }
  elsif [Page::STATUS_INDEXED, Page::STATUS_TRANSCRIBED].include?(@page.status)
    save_button = button_tag save_button_title, name: 'save_to_transcribed', type: 'submit', id: 'save_button_top', onclick: 'unsavedNotes(event);', title: "#{t('.save_to_transcribed_tooltip')}", data: { disable_with: t('.please_wait') }
  end

.flex-toolbar_group
  -unless @preview_xml
    -if @page && !@page.ai_plaintext.blank? && @collection.text_entry?
      =button_tag t('.copy_ai_plaintext'), type: 'button', id: 'copy-ai-plaintext', title: "#{t('.copy_ai_plaintext_tooltip')}"
    =button_tag t('.preview'), name: 'preview', type: 'submit', title: "#{t('.preview_tooltip')}"
  -else
    =button_tag t('.edit'), :name => 'edit', type: 'submit', title: "#{t('.edit_tooltip')}"
  -unless @collection.subjects_disabled || @collection.field_based
    =button_tag t('.autolink'), name: 'autolink', type: 'submit', title: "#{t('.autolink_tooltip')}"

  =save_button
  =done_button
  =approve_button
