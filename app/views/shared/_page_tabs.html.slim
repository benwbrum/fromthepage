-tabs = [{\
  :name => 'Overview',
  :selected => 1,
  :path => "#{collection_display_page_path(@collection.owner, @collection, @work, @page.id)}",
}]

-if user_signed_in? && current_user.can_transcribe?(@work)
  -if correction_mode?
    -tabs += [{\
      :name => 'Correct',
      :selected => 3,
      :path => "#{collection_transcribe_page_path(@collection.owner, @collection, @work, @page.id)}",
    }]
  -else
    -tabs += [{\
      :name => 'Transcribe',
      :selected => 3,
      :path => "#{collection_transcribe_page_path(@collection.owner, @collection, @work, @page.id)}",
    }]

  -if @work.supports_translation
    -tabs += [{\
      :name => 'Translate',
      :selected => 6,
      :path => "#{collection_translate_page_path(@collection.owner, @collection, @work, @page.id)}",
    }]

-if !current_user && !@work.restrict_scribes
  -tabs += [{\
    :name => 'Transcribe',
    :selected => 3,
    :path => "#{collection_guest_page_path(@collection.owner, @collection, @work, @page.id)}",
  }]


-tabs += [{\
  :name => 'Versions',
  :selected => 2,
  :path => "#{collection_page_version_path(@collection.owner, @collection, @work, @page.id)}",
}]

-if user_signed_in? && current_user.like_owner?(@work)
  -tabs += [{\
    :name => 'Settings',
    :selected => 4,
    :path => "#{collection_edit_page_path(@collection.owner, @collection, @work, @page.id)}",
  }]

-description = xml_to_html(@page.xml_text)
-selected_tab = tabs.find { |tab| tab[:selected] == selected }[:name] rescue ""
-tab_title = ([3,6].include? selected) ? "#{selected_tab.downcase} page" : "page #{selected_tab.downcase}"
-page_title = @collection.present? ? "#{@page.title} (#{@collection.title}, #{@work.title})" : "#{@page.title} (#{@work.title})"
-content_for :page_title, selected == 1 ? "#{page_title}" : "#{selected_tab} - #{page_title}"
-content_for :meta_description, "#{page_title} - #{tab_title}. #{strip_tags(description).truncate(150, separator: ' ')}"

.headline
  h1.headline_title =@page.title
  .headline_aside
    nav.page-nav
      -if @page != @work.pages.first
        -higher_item = @page.higher_item
        =link_to({ :page_id => higher_item.id }, class: 'page-nav_prev', title: 'Previous page', 'aria-label' => 'Previous page', onclick: 'unsavedTranscription(event);')
          =svg_symbol '#icon-arrow-left', class: 'icon', title: 'Previous page'
      -else
        span.page-nav_prev =svg_symbol '#icon-arrow-left', class: 'icon'

      span.page-nav_info ="Page #{@page.position} of #{@work.pages.size}"

      -if !@page.last?
        -lower_item = @page.lower_item
        =link_to({ :page_id => lower_item.id }, class: 'page-nav_next', title: 'Next page', 'aria-label' => 'Next page', onclick: 'unsavedTranscription(event);')
          =svg_symbol '#icon-arrow-right', class: 'icon', title: 'Next page'
      -else
        span.page-nav_next =svg_symbol '#icon-arrow-right', class: 'icon'

.tabs
  -for tab in tabs
      =link_to_unless tab[:selected] == selected, tab[:name], tab[:path]
        a.active =tab[:name]
