<%= stylesheet_link_tag "handsontable.min" %>
<%= javascript_include_tag "handsontable.full.min" %>



<div id="hot-div-<%= transcription_field.id %>" 
  class="spreadsheet-input" 
  data-field-name="fields[<%= transcription_field.id %>]"></div>

<script>
  var columnConfig = [
    <% transcription_field.spreadsheet_columns.each do |column| %>
      { 
        <% if column.input_type == 'select' %>
          type: 'dropdown',
          source: <%= raw(column.options.split(";").to_json) unless column.options.nil? %>
        <% elsif column.input_type == 'numeric' %>
          type: 'numeric'
        <% elsif column.input_type == 'checkbox' %>
          type: 'checkbox'
        <% else %>
        <% end %>
       },
    <% end %>
  ]
  var colHeadersConfig = [
    <% transcription_field.spreadsheet_columns.each do |column| %>    
      "<%= column.label %>",
    <% end %>
  ]

  var data = [
    <% if @page %>
      <% cells_by_row = transcription_field.table_cells.where(:page_id => @page.id).group_by { |cell| cell.row } %>
      <% cells_by_row.values.each do |data_row| %>
        [
          <% transcription_field.spreadsheet_columns.each do |column_config| %>
            <% cell = data_row.detect {|c| c.header == column_config.label } %>
            <% if column_config.input_type == 'checkbox' %>
              <% if cell.content == 'true' %>
                "true",
              <% else %>
                "false",
              <% end %>
            <% else %>
              <%= raw(cell.content.to_json) %>,
            <% end %>
          <% end %>
        ],
      <% end %>
      <% (transcription_field.starting_rows - cells_by_row.count).times do %>
        [
          <% transcription_field.spreadsheet_columns.count.times do %>
            null,
          <% end %>
        ],
      <% end %>
    <% end %>
  ]
  if(data.length == 0) {
    data = null;
  };

  // var data = [
  //   ["", "Ford", "Tesla", "Toyota", "Honda"],
  //   ["2017", 10, 11, 12, 13],
  //   ["2018", 20, 11, 14, 13],
  //   ["2019", 30, 15, 12, 13]
  // ];

  function highlightRow(rowNum, maxRows, topOffset, bottomOffset) {
    // first calculate against a 100% high canvas
    rowHeightAsSpreadsheetPct = 1.0 / maxRows;

    pctOfPageThatIsSpreadsheet = (1.0 - topOffset - bottomOffset);
    rowHeightAsPagePct = pctOfPageThatIsSpreadsheet / maxRows;

    rowOffsetFromPageTop = topOffset + (rowHeightAsPagePct*(rowNum));


    // now transpose for viewport coordinates
    viewportY = rowOffsetFromPageTop / window.viewer.viewport.getAspectRatio();
    viewportHeight = rowHeightAsPagePct / window.viewer.viewport.getAspectRatio();

    window.viewer.removeOverlay("runtime-overlay");
    
    var elt = document.createElement("div");
    elt.id = "runtime-overlay";
    elt.className = "filter";
    window.viewer.addOverlay({
      element: elt,
      location: new OpenSeadragon.Rect(0.0, viewportY, 1.0, viewportHeight)
    });
  };



  var container = document.getElementById("hot-div-<%= transcription_field.id %>");
  var hot = new Handsontable(container, {
    rowHeaders: true,
    colHeaders: colHeadersConfig,
    filters: true,
    data: data,
    contextMenu: ['row_above', 'row_below', 'remove_row', 'undo', 'redo', 'cut', 'copy'],
    dropdownMenu: true,
    columns: columnConfig,
    afterSelection: (row, column, row2, column2, preventScrolling, selectionLayerLevel) => {
      // setting if prevent scrolling after selection
      //alert("highlightRow("+row+", <%= transcription_field.starting_rows %>, 0.1, 0.1);");
      highlightRow(row, <%= transcription_field.starting_rows %>, 0.1, 0.1);
    },
    manualColumnResize: true,
    manualRowResize: true,
    startRows: <%= transcription_field.starting_rows %>
  });

  // $(container).data('hot-object', hot);
      // actually call it

  //alert("highlightRow(rowNum, <%= transcription_field.starting_rows %>, 0.1, 0.1);");

</script>