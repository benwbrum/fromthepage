=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 8, :collection_id => @collection.id }})

p Document sets are sub-sets of the documents in a collection.  They have several uses, including:
ul
  li Focusing transcriber effort on a particular group of works.
  li Publishing works from a private collection. (Any works in a private collection which are added to a public document set will be visible to the public.)
  li Aggregating works into thematic exhibits

-if @collection.document_sets.present?
  h3 
    | Document Sets for 
    =@collection.title
  table.datagrid
    thead
      tr
        th Title
        th Privacy
        th Actions
        th
    tbody#sets[*language_attrs(@collection)]
      -@collection.document_sets.each do |document_set|
        tr
          td
            =link_to document_set.title, collection_path(document_set.owner, document_set)
          td
            =document_set.is_public ? 'Public' : 'Private'  
          td
            =link_to 'Edit', collection_settings_path(@collection.owner, document_set)
          td
            =link_to 'Delete',{ :controller => 'document_sets', :action => 'destroy', :document_set_id => document_set.id }, data: { :confirm => 'Are you sure you want to delete this document set? This will delete your document set, but not any of the works in the document set.' }
              

br
=link_to 'Create a Document Set', new_document_set_path(collection_id: @collection.id), class: 'button', 'data-litebox' => ''

-if @collection.document_sets.present?
  h3 Assign Works to Document Sets
  =form_tag(document_set_assign_works_path(collection_id: @collection.id))
    table.datagrid
      thead
        tr
          th Work
          th Collaboration
          -@collection.document_sets.each do |document_set|
            th
              =document_set.title
              /! consider making this header vertical or rotate 45 degrees via css so that long document set titles do not mess up the display
      tbody[*language_attrs(@collection)]
        -@works.each do |work|
          tr
            td
              =work.title
            td
              i
                =work.restrict_scribes  ? 'Restricted' : 'Unrestricted'
            -ids = work.document_sets.ids
            -@collection.document_sets.each do |document_set|
              td
                =check_box_tag("work_assignment[#{document_set.id}][#{work.id}]", "true", ids.include?(document_set.id))
    br
    =submit_tag "Save"

    =render(:partial => 'shared/pagination', :locals => { :model => @works, :entries_info => true })

-else
  p This collection has no document sets