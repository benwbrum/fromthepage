.collection-settings-wrapper
  p =t('.document_is_marked_public')

  =form_tag(collection_settings_works_path(@collection.owner, @collection), method: :get, enforce_utf8: false, class: 'collection-search') do
    =validation_summary @collection.errors
    =hidden_field_tag('collection_id', @collection.slug)
    =search_field_tag :search, params[:search], placeholder: t('.search_for_works')
    =button_tag t('.search')
    =label_tag 'search', "Search for works", class: 'hidden'

  =form_tag({ action: 'assign_to_set'}) do
    =hidden_field_tag :collection_id, @collection.slug

    table.datagrid
      thead
        tr
          th =t('.work')
          th =t('.status')
          th
            =check_box_tag(nil, nil, false, style: 'margin: 0 5px 0 7px;', data: { controller: 'select-all', select_all: 'works' })
            =t('.add')
      tbody
        -@works.each do |work|
          tr
            td
              =work.title
              -if work.supports_translation
                span
                  translate
              -if work.ia_work && work.ia_work.use_ocr
                span
                   ocr
            td
              -work_stats(work)
              span(title="#{t('.n_pages', count: work.work_statistic.total_pages)}#{@wording}")
                .progress
                  -unless @collection.subjects_disabled
                    span(style="width:#{@progress_annotated}%")
                    span(style="width:#{@progress_completed - @progress_annotated}%")
                    span(style="width:#{@progress_review}%")

                  -else
                    span(style="width:#{@progress_completed}%")
                    span(style="width:#{@progress_review}%")

            td.document_set
              =check_box_tag("work[#{work.id}]", "work[#{work.id}]", false, { title: t('.add_work_title_to_document_set', work_title: work.title), class: 'works' })
    br
    .aright
      =submit_tag t('.save')

  =render(:partial => 'shared/pagination', :locals => { :model => @works, :entries_info => true })
