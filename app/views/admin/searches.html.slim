=render(:partial => 'header', :locals => { :selected => 7 })

section.admin-counters
  .counter(data-prefix="#{number_with_delimiter(@find_a_project_searches_per_day)}") Find a project<br> searches per day
  .counter(data-prefix="#{number_with_delimiter(@collection_work_searches_per_day)}") Collection/work<br> searches per day
  .counter(data-prefix="#{number_with_delimiter(@find_a_project_average_hits)}") Find a project<br> average hits
  .counter(data-prefix="#{number_with_delimiter(@collection_work_average_hits)}") Collection/work<br> average hits
  .counter(data-prefix="#{number_with_delimiter(@clickthrough_rate)}%") Searches get clicks
  .counter(data-prefix="#{number_with_delimiter(@clickthrough_rate_visit)}%") Visits get search clicks
  .counter(data-prefix="#{number_with_delimiter(@contribution_rate)}%") Searches get contributions
  .counter(data-prefix="#{number_with_delimiter(@contribution_rate_visit)}%") Visits get contributions from searches

table.admin-grid.datagrid.striped
  thead
    tr
      th =t('.query')
      th 
        =t('.type')
        br
        =form_tag admin_searches_path, method: :get do
          =select_tag :filter, options_for_select([['All', 'all'], ['Find a Project', 'findaproject'], ['Collection & Work', 'collectionwork'], ['Collection', 'collection'], ['Collection title/metadata', 'collection-title'], ['Work', 'work']], params[:filter]), onchange: 'this.form.submit();'

      th =t('.collection')
      th =t('.work')
      th =t('.hits')
      th =t('.clicks')
      th =t('.contributions')
      th =t('.date')
      th(colspan="2") =t('.user')
      th =link_to t('.owner'), admin_searches_path(:filter => 'nonowner'), class: 'acenter', title: t('.owner_filter')

  tbody 
    -@searches.each do |search|
      tr
        td.toleft
          div =link_to search.query, search.results_link
        td.nowrap =t(".search_type.#{search.search_type}")
        td
          -if search.collection 
            =link_to search.collection.title, collection_path(search.collection.owner, search.collection)
          -elsif search.document_set 
            =link_to search.document_set.title, collection_path(search.document_set.owner, search.document_set)
          -elsif search.work
            =link_to search.work.collection.title, collection_path(search.work.collection.owner, search.work.collection)
        td 
          -if search.work
            =link_to search.work.title, collection_read_work_path(search.work.collection.owner, search.work.collection, search.work)
        td.nowrap =search.hits
        td.nowrap =search.clicks
        td.nowrap =search.contributions
        td.nowrap =search.created_at.localtime.strftime("%m/%d/%Y at %I:%M %p")
        -if search.user
          td.nowrap.toleft
            div =link_to user_profile_path(search.user), class: 'userpic userpic-small'
              =profile_picture(search.user)
          td.nowrap
            div =link_to search.user.login, user_profile_path(search.user)
            small =search.user.email
        -else
          td
          td Guest
        td.acenter =svg_symbol '#icon-check-sign', class: 'icon a50' if search.owner

=render(:partial => 'shared/pagination', :locals => { :model => @searches, :entries_info => true })

br
br
section.export-searches
  h2=t('.export_searches')
  =form_for :bulk_export, url: bulk_export_create_for_owner_path do |f| 
    =f.hidden_field :admin_searches, value: true
    =f.label(:start_date, t('.start_date'))
    |  
    =f.text_field('report_arguments[start_date]', value: l(@start_date.to_date), style: "width:30%", id: 'start_date')
    |  
    =f.label(:end_date, t('.end_date'))
    |  
    =f.text_field('report_arguments[end_date]', value: l(@end_date.to_date), style: "width:30%", id: 'end_date')
    |
    =f.submit t('.export'), id: 'searches-export-submit'
  br

-content_for :javascript
=javascript_include_tag 'datepicker/datepicker'
javascript:
  var today = new Date()
  var yesterday = new Date(today)
  yesterday.setDate(yesterday.getDate() - 1)
  
  //Attach a date picker for start and end dates
  datePickerController.createDatePicker({
      formElements:{
          "start_date":"%M %d, %Y"
      },
      rangeHigh: yesterday,
      noFadeEffect: true
  });

  datePickerController.createDatePicker({
      formElements:{
          "end_date":"%M %d, %Y"
      },
      rangeHigh: yesterday,
      noFadeEffect: true      
  });
