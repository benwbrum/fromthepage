=render(:partial => 'header', :locals => { :selected => 7 })

=form_tag(admin_autoflag_path, method: :get, enforce_utf8: false, class: 'collection-search') do
  span =t('.flagged_abusive_content')
  =button_tag 'Flag', :name => nil
  =label_tag :search, t('.find_potential_abusive_content'), class: "hidden"


table.admin-grid.datagrid.striped
  thead
    tr
      th =t('.user')
      th =t('.item_date')
      th.Flagged =t('.content')
      th =t('.actions')
  tbody
    -@flags.each do |flag|
      tr
        td.nowrap.toleft
          -if flag.author_user
            div =link_to flag.author_user.display_name, user_profile_path(flag.author_user)
            small =flag.author_user.email
          -else
            i user removed
        td
          div
            -if flag.page_version
              =link_to flag.page_version.title, page_version_show_path(:page_version_id => flag.page_version_id)
            -elsif flag.article_version
              =link_to flag.article_version.title, article_version_show_path(:article_version_id => flag.article_version_id)
            -elsif flag.note && flag.note.page
              =link_to flag.note.page.title, display_display_page_path(:page_id => flag.note.page_id)
            -else
              i content removed
          div
            small =flag.content_at.localtime.strftime('%b %d, %Y')
          div
            small =flag.content_at.localtime.strftime('%H:%M')
        td =flag.snippet
        td.nowrap
          .instack
            =link_to t('.ok'), admin_ok_flag_path(:flag_id => flag.id, :page => params[:page]), { :alt => t('.mark_this_content_as_not_abusive')}
            =link_to t('.remove'), admin_revert_flag_path(:flag_id => flag.id, :page => params[:page]), { :alt => t('.delete_the_abusive_content')}
            =link_to t('.expunge_user'), admin_expunge_confirmation_path(:user_id => flag.author_user_id, :flag_id => flag.id), :data => { litebox: { hash: "" }}, :alt => t('.delete_the_user_and_remove_all_contributions')
            =link_to t('.ok_user'), admin_ok_user_path(:flag_id => flag.id, :page => params[:page]), { :alt => t('.mark_this_users_content_as_not_abusive')}

=render(:partial => 'shared/pagination', :locals => { :model => @flags, :entries_info => true })
