=render({ :partial => '/shared/page_tabs', :locals => { :selected => 1, :page_id => @page.id }})

.page-headlines
  .headline
    h3.headline_title =t('.facsimile')
  .headline
    -if translation_mode?
      h3.headline_title =t('.translation')
      .page_status
        =t("page.edit.status")
        =t("page.edit.page_status_#{@page.translation_status}")
      small.headline_aside =link_to t('.show_transcription'), { :translation => false, :page_id => @page.id }, class: 'button outline'
    -else
      h3.headline_title =t('.transcription')
      .page_status
        =t("page.edit.status")
        =t("page.edit.page_status_#{@page.status}")

      -if @work.supports_translation
        small.headline_aside =link_to t('.show_translation'), { :translation => true, :page_id => @page.id }, class: 'button outline'

.page-columns
  .page-column.page-imagescan
    =render :partial => '/shared/osd_div'

  .page-column
    .page-preview[*language_attrs(@collection)]
      -if translation_mode?
        -text = xml_to_html(@page.xml_translation)
        -action = 'translate'
        -help_word = 'help translate'
        -text_type = 'translated'

      -elsif correction_mode?
        -text = xml_to_html(@page.xml_text)
        -action = 'display_page'
        -help_word = 'help correct'
        -text_type = 'corrected'

      -else
        -text = xml_to_html(@page.xml_text)
        -action = 'display_page'
        -help_word = 'help transcribe'
        -text_type = 'transcribed'

      -mark_blank = link_to(t('.mark_the_page_blank'), transcribe_mark_page_blank_path(:page_id => @page.id, :source_text => 'blank', :page => {:mark_blank => '1'} ))

      -if @page.status == Page::STATUS_BLANK
        .centered
          .centered_content
            p.nodata_text==t('.this_page_is_blank')
      -elsif text.present?
        ==text
      -else
        .centered
          .centered_content
            -if @collection.active? # Inactive Collections shouldn't display this stuff
              h5.nodata_title =t('.this_page_is_not', text_type: text_type)
              p.nodata_text
                -if current_user && current_user.can_transcribe?(@page.work)
                  -help_link = link_to(help_word, { :controller => 'transcribe', :action => action, :page_id => @page.id })
                  ==t('.please_help_this_page', help_link: help_link)
                  ==t('.or_mark_blank', mark_blank: mark_blank) unless @page.status == Page::STATUS_BLANK
                -elsif !current_user && !@page.work.restrict_scribes
                  -help_link = link_to(help_word, transcribe_guest_path(:page_id => @page.id))
                  ==t('.please_help_this_page', help_link: help_link)
                -else
                  ==t('.collaboration_is_restricted')
            -else
              ==t('.collection_is_not_active')

h2.legend#notes =t('.page_notes')
.page-notes
  =render :partial => "notes/notes"

=render({ :partial => '/shared/collection_footer' })

-unless MIXPANEL_ID.blank?
  javascript:  mixpanel.track("Display Page");
