=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 6, :collection_id => @collection }})

h2.nomargin =t('.export_all_works')
p.big
  span.fright(style="margin-left: 30px")
    =link_to(bulk_export_new_path(:collection_id => @collection.slug), class: 'button btnExport', id: 'btnExportAll')
      =svg_symbol '#icon-export', class: 'icon'
      span =t('.export_all_works')

  span =t('.export_all_works_description')


-if ContentdmTranslator.collection_is_cdm?(@collection) && @collection.text_entry? && @collection.is_a?(Collection)
  h2 =t('.export_to_contentdm')
  p.big
    span.fright(style="margin-left: 30px")
      =link_to(export_edit_contentdm_credentials_path(:collection_id => @collection.id), {:class => 'button btnExport', :id => 'btnExportContentdm', :data => { :litebox => { :hash => "", :collection_id => @collection.id }, :collection_id => @collection.id}})
        =svg_symbol '#icon-export', class: 'icon'
        span =t('.export_to_contentdm')
    span =t('.export_to_contentdm_description')

-if @collection.text_entry?
  h2 =t('.export_individual_works')
  p.big =t('.export_individual_works_description')

  =fe_filter_table_wrapper(url: collection_export_path(@collection.owner, @collection), selector: 'export-works-table', sorting: @sorting, ordering: @ordering) do
    =fe_filter_page_size_select(selected: params[:per_page] || '15')
    =fe_filter_search(key: :search, value: params[:search], classes: 'w30')

    #export-works-table
      =render partial: 'table'

h2= t('.api')
p
  =t('.iiif_api_description', link: link_to(t('.here'), 'https://github.com/benwbrum/fromthepage/wiki/FromThePage-Support-for-the-IIIF-Presentation-API-and-Web-Annotations')).html_safe

p
  =t('.iiif_collection_api_endpoint', link: link_to(iiif_collection_url(@collection.slug, only_path: false),
                                                    iiif_collection_url(@collection.slug, only_path: false))).html_safe

-content_for :javascript
  javascript:
    $(function() {
      // Remove 'page_busy' spinner once CSV download finished
      // Cookie should be set to 'true' in the controller method
      $('.btnExport').on('click', function() {
        Cookies.remove('download_finished', {path: '/'});
        var downloadCheckTimer = window.setInterval(function() {
          var cookie = Cookies.get('download_finished');
          if(cookie === 'true') {
            $('html').removeClass('page-busy');
            window.clearInterval(downloadCheckTimer);
          }
        }, 1000);
      });
    });
