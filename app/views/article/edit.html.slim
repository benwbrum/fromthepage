=javascript_include_tag "transcribe"

=render({ partial: '/shared/article_tabs', locals: { selected: 4, article_id: @article.id } })

=render({ partial: '/shared/insert_table_modal' })

.article-columns.columns
  article.maincol
    =form_for(@article, url: collection_article_update_path(@collection.owner, @collection, @article)) do |f|
      =hidden_field_tag(:article_id, @article.id)
      =validation_summary @article.errors
      table.form
        tr.big
          th =f.label :title, t('.title')
          td.w100 =f.text_field :title
        tr.big
          th =f.label :uri, t('.uri')
          td.w100 =f.text_field :uri
        tr.big
          th =f.label :disambiguator, t('.disambiguator')
          td.w100 =f.text_field :disambiguator
        tr
          td.voice-div(colspan="2")
            =f.label :source_text, t('.description'), class: 'above'
            div class=('article-editarea' if @collection.voice_recognition)
              -if @collection.voice_recognition
                =image_submit_tag 'mic-icon.png', height: '40', alt: t('.microphone'), class: 'article-voice', id: 'start_img', onclick: 'startButton(event);'
                span.voice-info.article-voice

              =f.text_area :source_text, class: 'article-editarea_textarea', rows: 15
              =render({ :partial => '/shared/codemirror', :locals => { :textarea => "article_source_text", :text_direction => 'ltr', :height => '300', :show_line_numbers => false } })
      .fglight
        =render partial: 'shared/markup_help'
      .toolbar
        =f.button t('.autolink'), name: 'autolink'
      br

      -if @article.gis_enabled?
        table.form
          tr
            th =f.label :latitude, t('.latitude')
            th =f.label :longitude, t('.longitude')
          tr
            td.w50 =f.text_field :latitude, :value => (number_with_precision(f.object.latitude, :precision => 5))
            td.w50 =f.text_field :longitude, :value => (number_with_precision(f.object.longitude, :precision => 5))


      -if @article.bio_fields_enabled?
        table.form
          tr
            th =f.label :birth_date, t('.birth_date')
            td.w100 =f.text_field :birth_date
          tr
            th =f.label :death_date, t('.death_date')
            td.w100 =f.text_field :death_date
          tr
            th =f.label :sex, t('.sex')
            td.w100 =f.text_field :sex, list: 'sex_autocomplete'
            datalist(id="sex_autocomplete")
              -@sex_autocomplete.each do |sex|
                option value=sex
          tr
            th =f.label :race_description, t('.race_description')
            td.w100 =f.text_field :race_description, list: 'race_description_autocomplete'
            datalist(id="race_description_autocomplete")
              -@race_description_autocomplete.each do |rd|
                option value=rd

      -if @article.org_fields_enabled?
        table.form
          tr
            th =f.label :begun, t('.begun')
            td.w100 =f.text_field :begun
          tr
            th =f.label :ended, t('.ended')
            td.w100 =f.text_field :ended

      tr
        td(colspan="2")
          =f.label :bibliography, t('.bibliography'), class: 'above'
          div
            =f.text_area :bibliography, class: 'article-editarea_textarea', rows: 5


      -update_article_url = url_for({ :controller => 'article', :action => 'article_category', :article_id => @article.id })

      =t('.categories')
      br
        =f.select :category_ids, \
          options_for_select(categories_options(@collection.categories), selected: @article.category_ids), \
          {}, { size: 1, multiple: true, aria: { label: t('.select_categories') }, data: { controller: 'select2', select2_placeholder_value: 'Assign categories...' } }

      .fglight
        .toolbar_group.aright =f.button t('.save_changes'), name: 'save', class: 'big'

    -if user_signed_in? && current_user.like_owner?(@collection)
      br
      =link_to(article_delete_path(article_id: @article.id, collection_id: @collection.slug), method: :delete, data: { confirm: t('.confirm_delete_subject') }, class: 'button')
        =svg_symbol '#icon-remove-sign', class: 'icon'
        span= t('.delete_subject')

  aside.sidecol
    -if @article.possible_duplicates.empty?
      h3= t('.no_duplicates_found')
      p.fglight == t('.no_duplicates_found_description', article: @article.title)
    -else
      h3= t('.possible_duplicates', count: @article.possible_duplicates.size)
      p.fglight ==t('.possible_duplicates_description', article: @article.title)
      =form_tag(article_combine_duplicate_path(article_id: @article.id), method: :post) do
        =hidden_field_tag :article_id, @article.id
        ul.article-duplicates
          -@article.possible_duplicates.each do |dup|
            li.article-duplicate
              label.article-duplicate_title
                =check_box_tag 'from_article_ids[]', dup.id
                |&nbsp;
                span =link_to (dup.title), controller: 'article', action: 'show', article_id: dup.id
              span.article-duplicate_pages
                small.label =link_to t('.n_pages', count: dup.link_list.size), controller: 'display', action: 'read_all_works', article_id: dup.id

        .toolbar
          .toolbar_group.aright =button_tag t('.combine_selected')

-content_for :javascript
  javascript:
    var lang = "#{@collection.language}";
