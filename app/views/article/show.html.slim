=render({ :partial => '/shared/article_tabs', :locals => { :selected => 1, :article_id => @article.id }})

.article-columns.columns
  article.maincol
    -description = xml_to_html(@article.xml_text)
    h3 Description
    -if description.present?
      .big[*language_attrs(@collection)] ==description
    -else
      -if user_signed_in? && !current_user.guest
        i =link_to 'Edit the description in the settings tab.', collection_article_edit_path(@collection.owner, @collection, @article)

    -if @article.uri && @article.uri.include?("http")
      p
        | See also: 
        a href="#{@article.uri}" target="_blank" #{@article.uri}

    h3 Related Subjects
    .article-graph
      =image_tag(file_to_url(@article.graph_image), :usemap => '#G', alt: "Related subjects")
      ==@map
    p.fglight =="The graph displays the other subjects mentioned on the same pages as the subject &ldquo;#{@article.title}&rdquo;. If the same subject occurs on a page with &ldquo;#{@article.title}&rdquo; more than once, it appears closer to &ldquo;#{@article.title}&rdquo; on the graph, and is colored in a darker shade. The closer a subject is to the center, the more &quot;related&quot; the subjects are."

  aside.sidecol
    -if user_signed_in? && @article.possible_duplicates.present?
      h5
        =link_to(collection_article_edit_path(@collection.owner, @collection, @article), class: 'fgred')
          =svg_symbol '#icon-warning-sign', class: 'icon icon-big vmiddle'
          span =pluralize(@article.possible_duplicates.size, 'Possible Duplicate')
    h3 Categories
    -if @article.categories.empty?
      p.fglight
        |This subject does not belong to any category
        br
        =link_to 'All uncategorized subjects in the collection', article_list_path(collection_id: @collection.slug, anchor: "category-none")
    -else
      ul.article-category-list.big
        -@article.categories.each do |cat|
          li ==(cat.ancestors.reverse.push(cat).map { |c| link_to c.title, { action: 'list', collection_id: @collection.slug, anchor: "category-#{c.id}"} }).join(" &rarr; ")

    h3 References
    =render :partial => 'article_links'

    h3 Text Search
    p Search the text of #{@collection.title} for pages containing words used to link to <em>#{@article.title}</em>
    =button_to "Search All Pages", { :controller => 'display', :action => 'search', :article_id => @article.id, :collection_id => @collection }
    p  Only search text of pages which do not link to <em>#{@article.title}</em>
    =button_to "Search Unlinked Pages", { :controller => 'display', :action => 'search', :article_id => @article.id, :unlinked_only => true, :collection_id => @collection}, { :rel => 'nofolllow' }
 
    -if user_signed_in? && current_user.like_owner?(@collection)
      h3 Export
      p Download a spreadsheet of coocurring subjects and works they appear in.
      =link_to "Download", collection_subject_distribution_path(@collection.owner, @collection, @article), class: 'button btnExport'
 

-content_for :javascript
  javascript:
    $(function() {

      $('[data-graph-category]').select2({
        placeholder: 'Select categories...',
        templateResult: function(category) {
          if(!category.id) { return category.text; }
          var level = $(category.element).data('level');
          var $category = $('<div>').css('margin-left', level * 15).text(category.text);
          return $category;
        }
      });

      $('.btnExport').on('click', function() {
        Cookies.remove('download_finished', {path: '/'});
        var downloadCheckTimer = window.setInterval(function() {
          var cookie = Cookies.get('download_finished');

          if(cookie === 'true') {
            $('html').removeClass('page-busy');
            window.clearInterval(downloadCheckTimer);
          }
        }, 1000);
      });
    });